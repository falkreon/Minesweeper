package blue.endless.minesweeper.client;

import org.lwjgl.opengl.GL32;
import org.lwjgl.opengl.GL41;

public enum AttribType {
	FLOAT(GL32.GL_FLOAT),
	VEC2(GL32.GL_FLOAT_VEC2),
	VEC3(GL32.GL_FLOAT_VEC3),
	VEC4(GL32.GL_FLOAT_VEC4),
	
	DOUBLE(GL32.GL_DOUBLE),
	DVEC2(GL41.GL_DOUBLE_VEC2),
	DVEC3(GL41.GL_DOUBLE_VEC3),
	DVEC4(GL41.GL_DOUBLE_VEC4),
	
	INT(GL32.GL_INT),
	IVEC2(GL32.GL_INT_VEC2),
	IVEC3(GL32.GL_INT_VEC3),
	IVEC4(GL32.GL_INT_VEC4),
	
	UNSIGNED_INT(GL32.GL_UNSIGNED_INT),
	UVEC2(GL32.GL_UNSIGNED_INT_VEC2),
	UVEC3(GL32.GL_UNSIGNED_INT_VEC3),
	UVEC4(GL32.GL_UNSIGNED_INT_VEC4),
	
	BOOL(GL32.GL_BOOL),
	BVEC2(GL32.GL_BOOL_VEC2),
	BVEC3(GL32.GL_BOOL_VEC3),
	BVEC4(GL32.GL_BOOL_VEC4),
	
	MAT2(GL32.GL_FLOAT_MAT2),
	MAT3(GL32.GL_FLOAT_MAT3),
	MAT4(GL32.GL_FLOAT_MAT4),
	DMAT2(GL41.GL_DOUBLE_MAT2),
	DMAT3(GL41.GL_DOUBLE_MAT3),
	DMAT4(GL41.GL_DOUBLE_MAT4),
	
	//TODO: irregularly-sized matrices
	
	SAMPLER_1D(GL32.GL_SAMPLER_1D),
	SAMPLER_2D(GL32.GL_SAMPLER_2D),
	SAMPLER_3D(GL32.GL_SAMPLER_3D),
	SAMPLER_CUBE(GL32.GL_SAMPLER_CUBE),
	SAMPLER_1D_SHADOW(GL32.GL_SAMPLER_1D_SHADOW),
	SAMPLER_2D_SHADOW(GL32.GL_SAMPLER_2D_SHADOW),
	SAMPLER_1D_ARRAY(GL32.GL_SAMPLER_1D_ARRAY),
	SAMPLER_2D_ARRAY(GL32.GL_SAMPLER_2D_ARRAY),
	SAMPLER_1D_ARRAY_SHADOW(GL32.GL_SAMPLER_1D_ARRAY_SHADOW),
	SAMPLER_2D_ARRAY_SHADOW(GL32.GL_SAMPLER_2D_ARRAY_SHADOW),
	SAMPLER_2D_MS(GL32.GL_SAMPLER_2D_MULTISAMPLE),
	SAMPLER_2D_MS_ARRAY(GL32.GL_SAMPLER_2D_MULTISAMPLE_ARRAY),
	SAMPLER_CUBE_SHADOW(GL32.GL_SAMPLER_CUBE_SHADOW),
	SAMPLER_BUFFER(GL32.GL_SAMPLER_BUFFER),
	SAMPLER_2D_RECT(GL32.GL_SAMPLER_2D_RECT),
	SAMPLER_2D_RECT_SHADOW(GL32.GL_SAMPLER_2D_RECT_SHADOW),
	
	ISAMPLER_1D(GL32.GL_INT_SAMPLER_1D),
	ISAMPLER_2D(GL32.GL_INT_SAMPLER_2D),
	ISAMPLER_3D(GL32.GL_INT_SAMPLER_3D),
	ISAMPLER_CUBE(GL32.GL_INT_SAMPLER_CUBE),
	ISAMPLER_1D_ARRAY(GL32.GL_INT_SAMPLER_1D_ARRAY),
	ISAMPLER_2D_ARRAY(GL32.GL_INT_SAMPLER_2D_ARRAY),
	ISAMPLER_2D_MS(GL32.GL_INT_SAMPLER_2D_MULTISAMPLE),
	ISAMPLER_2D_MS_ARRAY(GL32.GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY),
	ISAMPLER_BUFFER(GL32.GL_INT_SAMPLER_BUFFER),
	ISAMPLER_2D_RECT(GL32.GL_INT_SAMPLER_2D_RECT),
	
	USAMPLER_1D(GL32.GL_UNSIGNED_INT_SAMPLER_1D),
	USAMPLER_2D(GL32.GL_UNSIGNED_INT_SAMPLER_2D),
	USAMPLER_3D(GL32.GL_UNSIGNED_INT_SAMPLER_3D),
	USAMPLER_CUBE(GL32.GL_UNSIGNED_INT_SAMPLER_CUBE),
	USAMPLER_1D_ARRAY(GL32.GL_UNSIGNED_INT_SAMPLER_1D_ARRAY),
	USAMPLER_2D_ARRAY(GL32.GL_UNSIGNED_INT_SAMPLER_2D_ARRAY),
	USAMPLER_2D_MS(GL32.GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE),
	USAMPLER_2D_MS_ARRAY(GL32.GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY),
	USAMPLER_BUFFER(GL32.GL_UNSIGNED_INT_SAMPLER_BUFFER),
	USAMPLER_2D_RECT(GL32.GL_UNSIGNED_INT_SAMPLER_2D_RECT),
	
	//TODO: Image and atomic counter types
	
	UNKNOWN(-1);
	
	private final int value;
	
	AttribType(int value) {
		this.value = value;
	}
	
	public int intValue() {
		return value;
	}
	
	public static AttribType valueOf(int value) {
		for(AttribType t : values()) {
			if (value == t.value) return t;
		}
		return UNKNOWN;
	}
}
